{
  "org_name": "CloudSmith-Release-Safety",
  "repo_name": "dotnet-petclinic-payment",
  "repo_url": "https://github.com/CloudSmith-Release-Safety/dotnet-petclinic-payment",
  "infrastructure_providers": [
    {
      "provider_id": "payment_dynamodb_table",
      "resource_type": "DynamoDB",
      "resource_identifier": "PetClinicPayment",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "infrastructure_type": "SDK-Direct",
      "description": "DynamoDB table storing payment information for pet clinic services",
      "interfaces": [
        {
          "interface_type": "database",
          "endpoint_pattern": "dynamodb.${region}.amazonaws.com",
          "operations": ["GetItem", "PutItem", "ScanItem", "Query", "CreateTable", "DeleteTable", "DescribeTable"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "billing_mode": "PROVISIONED",
        "read_capacity_units": 5,
        "write_capacity_units": 5,
        "key_schema": [
          {
            "attribute_name": "id",
            "key_type": "HASH"
          }
        ],
        "attribute_definitions": [
          {
            "attribute_name": "id",
            "attribute_type": "S"
          }
        ]
      },
      "security": {
        "authorization": "IAM Role-based access"
      },
      "provider_type": "internal"
    },
    {
      "provider_id": "payment_service_ecr",
      "resource_type": "ECR",
      "resource_identifier": "dotnet-petclinic-payment",
      "file_path": "push-ecr.sh",
      "infrastructure_type": "SDK-Direct",
      "description": "ECR repository hosting the payment service container image",
      "interfaces": [
        {
          "interface_type": "container_registry",
          "endpoint_pattern": "${account}.dkr.ecr.${region}.amazonaws.com/dotnet-petclinic-payment",
          "operations": ["PushImage", "PullImage"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "image_tag_mutability": "MUTABLE",
        "scan_on_push": false
      },
      "provider_type": "internal"
    },
    {
      "provider_id": "petclinic_eks_cluster",
      "resource_type": "EKS",
      "resource_identifier": "petclinic-demo",
      "file_path": ".github/workflows/eks-deploy.yml",
      "infrastructure_type": "SDK-Direct",
      "description": "EKS cluster hosting the payment service and other microservices",
      "interfaces": [
        {
          "interface_type": "kubernetes",
          "endpoint_pattern": "https://api.${cluster_name}.${region}.eks.amazonaws.com",
          "operations": ["ApplyResources", "GetResources", "UpdateResources"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "region": "us-west-2",
        "namespace": "default"
      },
      "environment_variables": [
        "TF_VAR_cluster_name=petclinic-demo"
      ],
      "provider_type": "external"
    }
  ],
  "application_consumers": [
    {
      "consumer_id": "payment_service",
      "component_type": "service",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "language": "C#",
      "description": "Pet clinic payment service managing payment information for veterinary services",
      "resource_discovery": {
        "method": "environment variables and configuration files",
        "configuration_files": ["appsettings.json", "appsettings.Development.json"],
        "environment_variables": ["ASPNETCORE_ENVIRONMENT"]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["visits-service-account"]
      },
      "sdk_usage": {
        "sdk_type": "AWSSDK.DynamoDBv2",
        "sdk_version": "3.7.304.4",
        "clients": ["IAmazonDynamoDB", "DynamoDBContext"]
      },
      "package_dependencies": [
        "AWSSDK.DynamoDBv2",
        "AWSSDK.Extensions.NETCore.Setup",
        "AWSSDK.SecurityToken",
        "Steeltoe.Discovery.Eureka"
      ],
      "internal_dependencies": [
        {
          "resource_type": "DynamoDB",
          "resource_name": "PetClinicPayment",
          "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs"
        }
      ],
      "external_dependencies": [
        {
          "resource_type": "EKS",
          "resource_name": "petclinic-demo",
          "repository": "terraform-eks-infrastructure"
        },
        {
          "resource_type": "Service",
          "resource_name": "customers-service",
          "repository": "petclinic-customers-service"
        }
      ]
    },
    {
      "consumer_id": "pet_clinic_context",
      "component_type": "class",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "language": "C#",
      "description": "Context class managing DynamoDB operations and service discovery client connections",
      "resource_discovery": {
        "method": "dependency injection"
      },
      "authentication": {
        "method": "IAM role"
      },
      "sdk_usage": {
        "sdk_type": "AWSSDK.DynamoDBv2",
        "clients": ["IAmazonDynamoDB", "IDynamoDBContext"]
      },
      "package_dependencies": [
        "AWSSDK.DynamoDBv2",
        "Steeltoe.Discovery"
      ],
      "internal_dependencies": [
        {
          "resource_type": "DynamoDB",
          "resource_name": "PetClinicPayment",
          "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs"
        }
      ]
    },
    {
      "consumer_id": "github_action_deploy",
      "component_type": "workflow",
      "file_path": ".github/workflows/eks-deploy.yml",
      "language": "YAML",
      "description": "GitHub Actions workflow for building, pushing to ECR, and deploying to EKS",
      "resource_discovery": {
        "method": "environment variables",
        "environment_variables": [
          "AWS_REGION",
          "TFSTATE_REGION",
          "TF_VAR_cluster_name"
        ]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["${{ secrets.AWS_ROLE_TO_ASSUME }}"]
      },
      "sdk_usage": {
        "sdk_type": "AWS CLI",
        "clients": ["sts", "eks", "ecr"]
      },
      "package_dependencies": [],
      "internal_dependencies": [
        {
          "resource_type": "ECR",
          "resource_name": "dotnet-petclinic-payment",
          "file_path": "push-ecr.sh"
        }
      ],
      "external_dependencies": [
        {
          "resource_type": "EKS",
          "resource_name": "petclinic-demo",
          "repository": "terraform-eks-infrastructure"
        }
      ]
    }
  ],
  "connections": [
    {
      "connection_id": "payment_service_to_dynamodb_create",
      "consumer_id": "pet_clinic_context",
      "provider_id": "payment_dynamodb_table",
      "provider_resource_type": "DynamoDB",
      "operation": "CreateTable",
      "access_type": "admin",
      "description": "Creates the DynamoDB table if it doesn't exist",
      "code_snippet": "var response = await this.AmazonDynamoDBClient.CreateTableAsync(new CreateTableRequest\n{\n    TableName = tableName,\n    ProvisionedThroughput = new()\n    {\n        ReadCapacityUnits = 5,\n        WriteCapacityUnits = 5\n    },\n    KeySchema =\n    [\n        new() {\n            AttributeName = \"id\",\n            KeyType = KeyType.HASH\n        }\n    ],\n    AttributeDefinitions =\n    [\n        new() {\n            AttributeName = \"id\",\n            AttributeType = ScalarAttributeType.S\n        }\n    ]\n});",
      "source_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "target_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "configuration_source": "direct code",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "payment_service_to_dynamodb_describe",
      "consumer_id": "pet_clinic_context",
      "provider_id": "payment_dynamodb_table",
      "provider_resource_type": "DynamoDB",
      "operation": "DescribeTable",
      "access_type": "read",
      "description": "Checks if the DynamoDB table exists and retrieves its status",
      "code_snippet": "await AmazonDynamoDBClient.DescribeTableAsync(new DescribeTableRequest { TableName = \"PetClinicPayment\" });",
      "source_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "target_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "configuration_source": "direct code",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "payment_service_to_dynamodb_delete",
      "consumer_id": "pet_clinic_context",
      "provider_id": "payment_dynamodb_table",
      "provider_resource_type": "DynamoDB",
      "operation": "DeleteTable",
      "access_type": "admin",
      "description": "Deletes the DynamoDB table as part of cleanup operations",
      "code_snippet": "var request = new DeleteTableRequest\n{\n    TableName = att.TableName\n};\nawait AmazonDynamoDBClient.DeleteTableAsync(request);",
      "source_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "target_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "configuration_source": "direct code",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "payment_service_to_dynamodb_scan",
      "consumer_id": "payment_service",
      "provider_id": "payment_dynamodb_table",
      "provider_resource_type": "DynamoDB",
      "operation": "Scan",
      "access_type": "read",
      "description": "Retrieves all payment records for a specific pet",
      "code_snippet": "var request = context.DynamoDbContext.ScanAsync<Payment>([]);\n\nvar payments = new List<Payment>();\n\ndo\n{\n    var page = await request.GetNextSetAsync();\n    payments.AddRange(page);\n} while (!request.IsDone);",
      "source_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "target_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "configuration_source": "dependency injection",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "payment_service_to_dynamodb_load",
      "consumer_id": "payment_service",
      "provider_id": "payment_dynamodb_table",
      "provider_resource_type": "DynamoDB",
      "operation": "GetItem",
      "access_type": "read",
      "description": "Retrieves a specific payment record by ID",
      "code_snippet": "var payment = await context.DynamoDbContext.LoadAsync<Payment>(paymentId);",
      "source_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "target_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "configuration_source": "dependency injection",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "payment_service_to_dynamodb_save",
      "consumer_id": "payment_service",
      "provider_id": "payment_dynamodb_table",
      "provider_resource_type": "DynamoDB",
      "operation": "PutItem",
      "access_type": "write",
      "description": "Creates or updates a payment record",
      "code_snippet": "await context.DynamoDbContext.SaveAsync(payment);",
      "source_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "target_file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/PetClinicContext.cs",
      "configuration_source": "dependency injection",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "github_action_to_ecr_create",
      "consumer_id": "github_action_deploy",
      "provider_id": "payment_service_ecr",
      "provider_resource_type": "ECR",
      "operation": "CreateRepository",
      "access_type": "admin",
      "description": "Creates the ECR repository if it doesn't exist",
      "code_snippet": "aws ecr create-repository --repository-name dotnet-petclinic-payment --region ${REGION} --no-cli-pager || true",
      "source_file_path": "push-ecr.sh",
      "target_file_path": "push-ecr.sh",
      "configuration_source": "environment variable",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "github_action_to_ecr_push",
      "consumer_id": "github_action_deploy",
      "provider_id": "payment_service_ecr",
      "provider_resource_type": "ECR",
      "operation": "PushImage",
      "access_type": "write",
      "description": "Pushes the container images to ECR with latest and commit SHA tags",
      "code_snippet": "docker push ${REPOSITORY_PREFIX}/dotnet-petclinic-payment:latest\ndocker push ${REPOSITORY_PREFIX}/dotnet-petclinic-payment:${COMMIT_SHA}",
      "source_file_path": "push-ecr.sh",
      "target_file_path": "push-ecr.sh",
      "configuration_source": "environment variable",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "github_action_to_eks_kubeconfig",
      "consumer_id": "github_action_deploy",
      "provider_id": "petclinic_eks_cluster",
      "provider_resource_type": "EKS",
      "operation": "UpdateKubeconfig",
      "access_type": "admin",
      "description": "Updates the kubeconfig file to connect to the EKS cluster",
      "code_snippet": "aws eks update-kubeconfig --name ${{ env.TF_VAR_cluster_name }} --region ${{ env.AWS_REGION }} --alias ${{ env.TF_VAR_cluster_name }}",
      "source_file_path": ".github/workflows/eks-deploy.yml",
      "target_file_path": "N/A",
      "configuration_source": "environment variable",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": true,
      "target_repo": "terraform-eks-infrastructure"
    },
    {
      "connection_id": "github_action_to_eks_deploy",
      "consumer_id": "github_action_deploy",
      "provider_id": "petclinic_eks_cluster",
      "provider_resource_type": "EKS",
      "operation": "ApplyResources",
      "access_type": "admin",
      "description": "Deploys Kubernetes resources to the EKS cluster",
      "code_snippet": "sed -e \"s/111122223333.dkr.ecr.us-west-2/$ACCOUNT_ID.dkr.ecr.$REGION/g\" -e 's#\\${REGION}'\"#${REGION}#g\" -e 's#\\${DB_SERVICE_HOST}'\"#${host}#g\" $config | kubectl -v=2 ${OPERATION} --namespace=$NAMESPACE -f -",
      "source_file_path": "scripts/eks/appsignals/tf-deploy-k8s-res.sh",
      "target_file_path": "N/A",
      "configuration_source": "command line parameters",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": true,
      "target_repo": "terraform-eks-infrastructure"
    }
  ],
  "architecture": {
    "application_type": "microservice",
    "infrastructure_pattern": "container-based",
    "deployment_approach": "CI/CD",
    "configuration_management": "environment variables and configuration files",
    "critical_paths": [
      {
        "path_name": "payment_processing",
        "description": "Payment data retrieval and storage",
        "involved_components": [
          "payment_service",
          "payment_dynamodb_table"
        ]
      },
      {
        "path_name": "deployment_pipeline",
        "description": "Building, pushing, and deploying to EKS",
        "involved_components": [
          "github_action_deploy",
          "payment_service_ecr",
          "petclinic_eks_cluster"
        ]
      }
    ],
    "security_model": {
      "authentication": "IAM roles",
      "authorization": "Resource-based policies",
      "data_protection": "HTTPS for API endpoints"
    },
    "cross_repo_dependencies": {
      "provides_to": [],
      "consumes_from": [
        {
          "repository": "terraform-eks-infrastructure",
          "resources": ["petclinic-demo"]
        },
        {
          "repository": "petclinic-customers-service",
          "resources": ["customers-service"]
        },
        {
          "repository": "petclinic-infrastructure",
          "resources": ["petclinic-database"]
        }
      ],
      "shared_infrastructure": true
    }
  }
}