{
  "org_name": "CloudSmith-Release-Safety",
  "repo_name": "dotnet-petclinic-payment",
  "repo_url": "https://github.com/CloudSmith-Release-Safety/dotnet-petclinic-payment",
  "provided_apis": [
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "GET",
      "service_name": "PaymentService",
      "description": "Retrieves all payments for a specific pet",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "List of payments for the specified pet",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "string",
                "petId": "integer",
                "paymentDate": "string (DateTime)",
                "amount": "number",
                "notes": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request - Pet not found or invalid parameters"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments/{paymentId}",
      "method": "GET",
      "service_name": "PaymentService",
      "description": "Retrieves a specific payment by ID for a pet",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          },
          {
            "name": "paymentId",
            "type": "string",
            "required": true,
            "description": "ID of the payment to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Payment details",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "string",
              "petId": "integer",
              "paymentDate": "string (DateTime)",
              "amount": "number",
              "notes": "string"
            }
          }
        },
        "400": {
          "description": "Bad request - Pet not found or invalid parameters"
        },
        "404": {
          "description": "Payment not found"
        },
        "503": {
          "description": "Service unavailable - Could not connect to customers service"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "POST",
      "service_name": "PaymentService",
      "description": "Creates a new payment for a specific pet",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Payment details",
          "properties": {
            "id": {
              "type": "string",
              "required": false,
              "description": "Payment ID (will be generated if not provided)"
            },
            "amount": {
              "type": "number",
              "required": true,
              "description": "Payment amount"
            },
            "paymentDate": {
              "type": "string (DateTime)",
              "required": false,
              "default": "current UTC time",
              "description": "Date of the payment"
            },
            "notes": {
              "type": "string",
              "required": false,
              "description": "Additional notes for the payment"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Payment created successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "string",
              "petId": "integer",
              "paymentDate": "string (DateTime)",
              "amount": "number",
              "notes": "string"
            }
          }
        },
        "400": {
          "description": "Bad request - Pet not found or invalid parameters"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/clean-db",
      "method": "DELETE",
      "service_name": "PaymentService",
      "description": "Cleans the payment database by deleting and recreating the table",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "responses": {
        "200": {
          "description": "Database cleaned successfully"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/healthz",
      "method": "GET",
      "service_name": "PaymentService",
      "description": "Health check endpoint for service monitoring",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "responses": {
        "200": {
          "description": "Service is healthy"
        }
      }
    }
  ],
  "consumed_apis": [
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "description": "Retrieves pet details from the customers service to validate that the pet exists",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "expected_response": {
        "status": 200,
        "body": {
          "id": "integer",
          "name": "string",
          "birthDate": "string (DateTime)"
        }
      }
    }
  ]
}