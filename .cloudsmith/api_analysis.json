{
  "org_name": "CloudSmith-Release-Safety",
  "repo_name": "dotnet-petclinic-payment",
  "repo_url": "https://github.com/CloudSmith-Release-Safety/dotnet-petclinic-payment",
  "provided_apis": [
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "GET",
      "service_name": "PaymentService",
      "description": "Retrieves a list of payments for a specific pet",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successfully retrieved payments for the pet",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "string",
                "petId": "integer",
                "paymentDate": "string (datetime)",
                "amount": "number",
                "notes": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request - Pet not found or invalid parameters"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments/{paymentId}",
      "method": "GET",
      "service_name": "PaymentService",
      "description": "Retrieves a specific payment for a pet",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet"
          },
          {
            "name": "paymentId",
            "type": "string",
            "required": true,
            "description": "The ID of the payment to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successfully retrieved the payment",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "string",
              "petId": "integer",
              "paymentDate": "string (datetime)",
              "amount": "number",
              "notes": "string"
            }
          }
        },
        "400": {
          "description": "Bad request - Pet not found or invalid parameters"
        },
        "404": {
          "description": "Payment not found"
        },
        "503": {
          "description": "Service unavailable - Customers service cannot be reached"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "POST",
      "service_name": "PaymentService",
      "description": "Creates a new payment for a pet",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Payment details to create",
          "properties": {
            "amount": {
              "type": "number",
              "required": true,
              "description": "The payment amount"
            },
            "notes": {
              "type": "string",
              "required": false,
              "description": "Additional notes for the payment"
            },
            "paymentDate": {
              "type": "string (datetime)",
              "required": false,
              "description": "Date of the payment, defaults to current UTC time"
            },
            "id": {
              "type": "string",
              "required": false,
              "description": "Optional payment ID, will be generated if not provided"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successfully created payment",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "string",
              "petId": "integer",
              "paymentDate": "string (datetime)",
              "amount": "number",
              "notes": "string"
            }
          }
        },
        "400": {
          "description": "Bad request - Pet not found or invalid parameters"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/clean-db",
      "method": "DELETE",
      "service_name": "PaymentService",
      "description": "Cleans the database by deleting and recreating the payment table",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "responses": {
        "200": {
          "description": "Database successfully cleaned"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/healthz",
      "method": "GET",
      "service_name": "PaymentService",
      "description": "Health check endpoint for the service",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "responses": {
        "200": {
          "description": "Service is healthy"
        }
      }
    }
  ],
  "consumed_apis": [
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "description": "Retrieves pet information to validate pet existence",
      "file_path": "dotnet-petclinic-payment/PetClinic.PaymentService/Program.cs",
      "expected_response": {
        "pet": {
          "id": "integer",
          "name": "string",
          "birthDate": "string (datetime)"
        }
      }
    }
  ]
}